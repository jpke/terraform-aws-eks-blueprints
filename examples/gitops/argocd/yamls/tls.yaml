apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    # The ACME server URL
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    # Email address used for ACME registration
    email: jp@jpearnest.com
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: letsencrypt-staging
    # Enable the HTTP-01 challenge provider
    solvers:
    - http01:
        ingress:
          class:  nginx
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    # The ACME server URL
    server: https://acme-v02.api.letsencrypt.org/directory
    # Email address used for ACME registration
    email: jp@jpearnest.com
    # Name of a secret used to store the ACME account private key
    privateKeySecretRef:
      name: letsencrypt-prod
    # Enable the HTTP-01 challenge provider
    solvers:
    - http01:
        ingress:
          class: nginx
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: kuard
# spec:
#   selector:
#     matchLabels:
#       app: kuard
#   replicas: 1
#   template:
#     metadata:
#       labels:
#         app: kuard
#     spec:
#       containers:
#       - image: gcr.io/kuar-demo/kuard-amd64:1
#         imagePullPolicy: Always
#         name: kuard
#         ports:
#         - containerPort: 8080
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: kuard
# spec:
#   ports:
#   - port: 80
#     targetPort: 8080
#     protocol: TCP
#   selector:
#     app: kuard
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: kuard
#   annotations:
#     kubernetes.io/ingress.class: "nginx"    
#     cert-manager.io/cluster-issuer: "letsencrypt-staging"

# spec:
#   tls:
#   - hosts:
#     - tls.eks-blueprints.jpearnest.com
#     secretName: quickstart-example-tls
#   rules:
#   - host: tls.eks-blueprints.jpearnest.com
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: kuard
#             port:
#               number: 80


# need to configure dns solver for letsencypt issuer first
# ---
# apiVersion: cert-manager.io/v1
# kind: Certificate
# metadata:
#   name: wildcard-tls-certificate
#   namespace: default
# spec:
#   dnsNames:
#   - '*.eks-blueprints.jpearnest.com'
#   issuerRef:
#     group: cert-manager.io
#     kind: ClusterIssuer
#     name: letsencrypt-prod
#   secretName: wildcard-tls-certificate
#   usages:
#   - digital signature
#   - key encipherment